//За еден природен број а велиме дека е порамнување на друг природен број b ако и само ако цифрите еднакви на 9 во бројот b се заменети со цифрата 7 во бројот а.
//Пример. Бројот 734775 е порамнување на бројот 934795.
//Од стандарден влез се внесуваат непознат број на цели броеви (не повеќе од 100), се додека не се внесе нешто што не може да се интерпретира како цел број.
//Ваша задача е да ги отпечатите најмалите 5 од порамнувањата на сите внесени броеви, по редослед од најмалиот кон најголемиот.
//Забелешка: Доколку се внесат помалку од 5 броеви, тогаш печатите толку броеви колку што се соодветно внесени.
//Наоѓањето на порамнувањето на даден број треба да се реализира во посебна рекурзивна функција poramnet(int a).
//Пример.
//За броевите: 9592, 69403, 100007, 6, 987, 6977, 33439,
//треба да се најдат нивните порамнувања ( тоа се: 7572, 67403, 100007, 6, 787, 6777 и 33437, соодветно),
//и да се отпечатат најмалите 5 од нив по овој редослед: 6 787 6777 7572 33437.
#include <iostream>
#include <cstring>
using namespace std;

void swap(int &a, int &b){
    int temp = a;
    a=b;
    b=temp;
}
void sort(int arr[], int size){
    bool swapped = true;
    while(swapped){
        swapped=false;
        for(int i = 0; i<size-1; i++){
            if(arr[i]>arr[i+1])
            {
                swap(arr[i], arr[i+1]);
                swapped=true;
            }
        }
    }
}
int poramnet(int a){
    if(a<9)
        return a;
    if(a%10==9)
        return poramnet(a/10) * 10 + 7;
    return a%10 + poramnet(a/10) * 10;

}
int main() {
    int n=100;
   int arr[n];
   int j =0, br=0;
   while(cin>>arr[j]){
       arr[j]=poramnet(arr[j]);
       j++;
   }
   sort(arr, j);
   if(j<5) {
       for (int i = 0; i < j; i++) {
           cout << arr[i] << " ";
       }
   }
   else
       for (int i = 0; i < 5; i++) {
           cout << arr[i] << " ";
       }

    return 0;
}
